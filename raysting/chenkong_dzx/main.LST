C51 COMPILER V7.01  MAIN                                                                   06/29/2008 11:48:12 PAGE 1   


C51 COMPILER V7.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: c:\GreenTools\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          #include "stdio.h"
   2          #include "math.h"
   3          #include "lib.h"
   4          
   5          
   6          //u8 code led_code[]={0xdd,0x50,0x9b,0xd3,0x56,0xc7,0xcf,0xd0,0xdf,0xd7,0x00,0x02}; 
   7          //u8 code led_code[]={0xdd,0x50,0x9b,0xd3,0x56,0xc7,0xcf,0xd0,0xdf,0xd7,0x00,0x02}; 
   8          //u8 code led_code[]={0xfc,0x60,0xda,0xf2,0x66,0xb6,0xbe,0xe0,0xfe,0xf6,0x00,0x02}; 
   9          u8 code led_code[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10,0xFF,0x7F}; 
  10          
  11          u8 led_buffer[4];
  12          u8 led_flash;
  13          LED_INFO code ck_led = {
  14                          4,                                              //number of leds
  15                          &led_flash,
  16                          led_buffer,
  17                          30,                                             //number of millisecond for flash
  18                          8,                                              //stop the led flash after  flashed FLASH_COUNT times
  19                          led_code,                               //code list for the code translation
  20                          0x7F,                                   //code for digit point
  21          };
  22          
  23          ///////////////////////////////////////////////////
  24          // settings of different leds - TYPEA
  25          ///////////////////////////////////////////////////
  26          #define LEDA_DATA_PORT  P0
  27          sbit ledA_0 = P2^3;
  28          sbit ledA_1 = P2^2;
  29          sbit ledA_2 = P2^1;
  30          sbit ledA_3 = P2^0;
  31          #define LED_HIGH        0
  32          #define LED_LOW         1
  33          void led_outputA(u8 pos,u8 dat)
  34          {
  35   1              LEDA_DATA_PORT = led_code[LED_NOSHOW_INDEX];
  36   1              switch(pos)
  37   1              {
  38   2              case 0: ledA_3 = LED_HIGH;break;
  39   2              case 1: ledA_0 = LED_HIGH;break;
  40   2              case 2: ledA_1 = LED_HIGH;break;
  41   2              case 3: ledA_2 = LED_HIGH;break;
  42   2              default: break;
  43   2              }
  44   1              LEDA_DATA_PORT = dat;   
  45   1              switch(pos)
  46   1              {
  47   2              case 0: ledA_0 = LED_LOW;return;
  48   2              case 1: ledA_1 = LED_LOW;return;
  49   2              case 2: ledA_2 = LED_LOW;return;
  50   2              case 3: ledA_3 = LED_LOW;return;
  51   2              }
  52   1      }
  53          extern u16 pkbd_timer;
  54          
  55          /*PWM1 related definition*/
C51 COMPILER V7.01  MAIN                                                                   06/29/2008 11:48:12 PAGE 2   

  56          #define PWM1_HIGH       1       //define 0 first or 1 first
  57          #define PWM1_LOW        0
  58          u8  pwm1_period = 6;    //period length of pwm
  59          u8  pwm1_up     = 3;            //1 part length in period
  60          u8  pwm1_tick   = 0;
  61          sbit pwm1_pin   =       P2^7;
  62          
  63          /*PWM2 related definition*/
  64          #define PWM2_HIGH       1       //define 0 first or 1 first
  65          #define PWM2_LOW        0
  66          u8  pwm2_period = 6;    //period length of pwm
  67          u8  pwm2_up     = 3;            //1 part length in period
  68          u16 pwm2_tick   = 0;
  69          sbit pwm2_pin =         P2^6;
  70          
  71          u16 motor1_degree = 0;
  72          u16 motor2_degree = 0;
  73          u16 motor1_target = 0;
  74          u16 motor2_target = 0;
  75          
  76          u8 gs =0;
  77          sbit g_ou1      = P3^7;
  78          sbit g_ou2  = P3^6;
  79          #define PDEG    200
  80          void timer_tick()       interrupt 1 using 1
  81          {
  82   1              if(pkbd_timer > 0)
  83   1                      pkbd_timer--;
  84   1      
  85   1              if(motor1_degree != motor1_target)
  86   1              {
  87   2                      pwm1_tick++;
  88   2      //              if(0x0080 == (motor1_degree & 0x0fff))
  89   2      //                      ledout_refresh(&ck_led);        
  90   2                      if(pwm1_tick >= pwm1_period) //one cycle is done
  91   2                      {
  92   3                              motor1_degree++;
  93   3                              pwm1_tick = 0;
  94   3                      }else{
  95   3                              if(pwm1_tick > pwm1_up)
  96   3                                      pwm1_pin = PWM1_LOW;
  97   3                              else
  98   3                                      pwm1_pin = PWM1_HIGH;
  99   3                      }
 100   2              }
 101   1              if(motor2_degree != motor2_target)
 102   1              {
 103   2                      pwm2_tick++;
 104   2      //              if(0x00ff == (motor2_degree & 0x0fff))
 105   2      //                      ledout_refresh(&ck_led);        
 106   2      
 107   2                      if(pwm2_tick >= pwm2_period) //one cycle is done
 108   2                      {
 109   3                              motor2_degree++;
 110   3                              pwm2_tick = 0;
 111   3                      }else{
 112   3                              if(pwm2_tick > pwm2_up)
 113   3                                      pwm2_pin = PWM2_LOW;
 114   3                              else
 115   3                                      pwm2_pin = PWM2_HIGH;
 116   3                      }
 117   2              }
C51 COMPILER V7.01  MAIN                                                                   06/29/2008 11:48:12 PAGE 3   

 118   1      
 119   1              if((0 == g_ou1) && (motor1_degree > (10*PDEG)))
 120   1              {
 121   2                      motor1_degree = 0;
 122   2                      pwm1_tick =0;
 123   2              }
 124   1      
 125   1              if((0 == g_ou2) && (motor2_degree > (10*PDEG)))
 126   1              {
 127   2                      motor2_degree = 0;
 128   2                      pwm2_tick = 0;
 129   2              }
 130   1      
 131   1      }
 132          
 133          code char code *str[] = {"0015","0025","0035","0045","0055","0065","0075","0085","0095", //cu 0-8
 134                                                           "0100","0110","0120","0130","0140","0150","0160","0170","0180", //pt100 a 9-17
 135                                                           "0190","0200","0210","0220","0230","0240","0250",                               //pt100 b 18-24
 136                                                           "0800","0900","1000","1100","1200","1300","1400","1500","1600", //pt1k a 25-33
 137                                                           "1700","1800","1900","2000","2100","2200","2300","2400","2500"};//pt1k b 34-42
 138          
 139          code u8 code m1_pos[] = {3,4,5,6,7,9,10,11,12,
 140                                                            12,1,3,4,5,6,7,9,10,11,12,1,3,4,5,6,
 141                                                            14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15};
 142          code u8 code m2_pos[] = {1,1,1,1,1,1,1,1,1,
 143                                                            2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,
 144                                                            4,5,6,7,8,9,10,11,12,3,4,5,6,7,8,9,10,11};
 145          code u8 code up_next[] = {1,2,3,4,5,6,7,8,0,    //cu
 146                                                            10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,9, //pt100
 147                                                            26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,25}; //pt1k
 148          
 149          code u8 code dn_next[] = {8,0,1,2,3,4,5,6,7,    //cu
 150                                                            24,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23, //pt 100
 151                                                            42,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41}; //pt1k
 152          
 153          extern u8 pkey_id;
 154          sbit LCu = P1^6;
 155          sbit LPt = P1^7;
 156          sbit L1k = P3^4;
 157          void main(void)
 158          {
 159   1              u8 key;
 160   1              u8 cpos;
 161   1              //init variables
 162   1              HW1SerialInit();
 163   1      
 164   1              //set serial port parameter (clock 11.0592M)
 165   1              //9600 baut rate 8 data non parity and 1 stop.
 166   1              SCON = 0x70;
 167   1              PCON = 0x00;
 168   1      
 169   1              //timer count
 170   1              TH1 = 0xfd;
 171   1              TH0 = 0xad;
 172   1      //      TL0 = 0xa0;
 173   1              //use timer 1 to be serial
 174   1              //use timer 0 too
 175   1              TMOD = 0x22;
 176   1              TR1 = 1; //start timer 1
 177   1              TR0 = 1; //start timer 0
 178   1              ET1 = 0;
 179   1              ES = 1;
C51 COMPILER V7.01  MAIN                                                                   06/29/2008 11:48:12 PAGE 4   

 180   1              PS = 1;
 181   1              EA = 1;
 182   1              ET0 = 1;
 183   1              
 184   1      
 185   1              if(g_ou1 == 1)
 186   1                      key = 0;
 187   1              if(g_ou2 == 1)
 188   1                      key = 0;
 189   1      
 190   1              //reset position of motor
 191   1              motor1_target = 0;
 192   1              motor1_degree = 1;
 193   1              while(motor1_degree != 0)
 194   1                      ;
 195   1              motor2_target = 0;
 196   1              motor2_degree = 1;
 197   1              while(motor2_degree != 0)
 198   1                      ;
 199   1      
 200   1      
 201   1              //move to reset position Cu15
 202   1              cpos = 0;
 203   1      
 204   1              motor1_target = ((u16)m1_pos[cpos])*PDEG;
 205   1              while(motor1_degree != motor1_target)
 206   1                      ;
 207   1      
 208   1              motor2_target = ((u16)m2_pos[cpos])*PDEG;
 209   1              while(motor2_degree != motor2_target)
 210   1                      ;
 211   1              LCu = 1;
 212   1              LPt = 0;
 213   1              L1k = 0;
 214   1              led_print(&ck_led,str[cpos],4);
 215   1      
 216   1              key = 0;
 217   1              while(1){
 218   2                      key = PKeyboard_Update();
 219   2                      if(key != 0)
 220   2                      {
 221   3                              switch(key)
 222   3                              {
 223   4                              case PKBD_CH_UP:
 224   4                                      key = 'u';break;
 225   4                              case PKBD_CH_DN:
 226   4                                      key = 'd';break;
 227   4                              case PKBD_CH_CU:
 228   4                                      key = 'c';break;
 229   4                              case PKBD_CH_PT:
 230   4                                      key = 'p';break;
 231   4                              case PKBD_CH_1K:
 232   4                                      key = 'k';break;
 233   4                              default:
 234   4                                      key = 0; break;
 235   4                              }
 236   3                      }else{
 237   3                              if(HW1SerialDataWaiting())
 238   3                              {
 239   4                                      key = HW1SerialWaitForOneByte();
 240   4                              }
 241   3                      }
C51 COMPILER V7.01  MAIN                                                                   06/29/2008 11:48:12 PAGE 5   

 242   2                      
 243   2                      if(key == 0)
 244   2                      {
 245   3                              ledout_refresh(&ck_led);
 246   3                              continue;
 247   3                      }else{
 248   3                              switch(key)
 249   3                              {
 250   4                              case 'u':
 251   4                                      cpos = up_next[cpos];break;
 252   4                              case 'd':
 253   4                                      cpos = dn_next[cpos];;break;
 254   4                              case 'c':
 255   4                                      cpos = 0;break;
 256   4                              case 'p':
 257   4                                      cpos = 9;break;
 258   4                              case 'k':
 259   4                                      cpos = 25;break;
 260   4                              default:
 261   4                                      key = 0;break;
 262   4                              }
 263   3                              if(key == 0)
 264   3                                      continue;
 265   3                              motor1_target = m1_pos[cpos]*PDEG;
 266   3                              motor2_target = m2_pos[cpos]*PDEG;
 267   3                              led_print(&ck_led,str[cpos],4);
 268   3                              LCu = 0;        LPt = 0;        L1k = 0;
 269   3                              if(cpos < 9)
 270   3                                      LCu = 1;
 271   3                              else if (cpos < 25)
 272   3                                      LPt = 1;
 273   3                              else
 274   3                                      L1k = 1;
 275   3                              key = 0;
 276   3                      }
 277   2      
 278   2              }
 279   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    676    ----
   CONSTANT SIZE    =    499    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
