C51 COMPILER V7.01  EEPROM                                                                 08/13/2009 20:46:42 PAGE 1   


C51 COMPILER V7.01, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN eeprom.OBJ
COMPILER INVOKED BY: F:\GreenTools\Keil\C51\BIN\C51.EXE eeprom.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1              #include <stc51.h>
   2                  #include <stdio.h>
   3                  #include <intrins.h>
   4                  #include<MATH.H>
   5                  #define uchar unsigned char
   6                  #define uint unsigned int
   7                  #define ulong unsigned long
   8           ulong code Sector[10][4]={
   9                                         {0x8000,0x8001,0x8002,0x8003},
  10                                                 {0x8200,0x8201,0x8202,0x8203},
  11                                             {0x8400,0x8401,0x8402,0x8403},
  12                                                 {0x8600,0x8601,0x8602,0x8603},
  13                                                 {0x8800,0x8801,0x8802,0x8803},
  14                                                 {0x8a00,0x8a01,0x8a02,0x8a03},
  15                                             {0x8c00,0x8c01,0x8c02,0x8c03},
  16                                                 {0x8e00,0x8e01,0x8e02,0x8e03},
  17                                                 {0x9000,0x9001,0x9002,0x9003},
  18                                                 {0x9200,0x9201,0x9202,0x9203},                                            
  19                                                    };
  20          
  21          
  22          
  23          extern void SectorErase(uint sector_addr);      // 扇区擦除
  24          extern uchar byte_read(uint byte_addr);         // byte读
  25          extern void byte_write(uint byte_addr, uchar original_data);    // byte写
  26          extern uchar byte_write_verify(uint byte_addr, uchar original_data);// byte写并校验
  27          extern uchar ArrayWrite(uint begin_addr, uint len, uchar code *array);  // byte数组写并校验
  28          extern void ArrayRead(uint begin_addr, uchar len);              // 读出, 保存在Ttotal[]中
  29          
  30          /*********************************************************************
  31                                     EEPROM使用
  32          *********************************************************************/
  33                          /* - 命令定义 - */
  34          #define RdCommand               0x01    /* 字节读       */
  35          #define PrgCommand              0x02    /* 字节写       */
  36          #define EraseCommand    0x03    /* 扇区擦除 */
  37                          /* 定义常量 */
  38          #define Error   1
  39          #define Ok      0
  40          /* 定义Flash对应于20MHz晶振系统的操作等待时间 */
  41          /* 时钟倍频时WaitTime用 0x00*/
  42          
  43          #define WaitTime        0x01
  44                         /* - 定义扇区大小 - */
  45          #define PerSector               512
  46          extern uchar Ttotal[];
  47                         /* = 打开 ISP,IAP 功能 = */
  48          void ISP_IAP_enable(void)
  49          {
  50   1              EA      =       0;                      /* 关中断       */
  51   1              ISP_CONTR =     ISP_CONTR & 0x18;       /* 0001,1000    */
  52   1              ISP_CONTR =     ISP_CONTR | WaitTime;   /* 写入硬件延时 */
  53   1              ISP_CONTR =     ISP_CONTR | 0x80;       /* ISPEN=1      */
  54   1      }
  55                           /* = 关闭 ISP,IAP 功能 = */
C51 COMPILER V7.01  EEPROM                                                                 08/13/2009 20:46:42 PAGE 2   

  56          void ISP_IAP_disable(void)
  57          {
  58   1              ISP_CONTR       =       ISP_CONTR & 0x7f;       /* ISPEN = 0 */
  59   1              ISP_TRIG        =       0x00;
  60   1              EA                      =   1;                  /* 开中断    */
  61   1      }
  62                          /* = 公用的触发代码 = */
  63          void ISPgoon(void)
  64          {
  65   1              ISP_IAP_enable();                       /* 打开 ISP,IAP 功能    */
  66   1              ISP_TRIG        =       0x46;           /* 触发ISP_IAP命令字节1 */
  67   1              ISP_TRIG        =       0xb9;           /* 触发ISP_IAP命令字节2 */
  68   1              _nop_();
  69   1      }
  70                             /* = 字节读 = */
  71          uchar byte_read(uint byte_addr)
  72          {   
  73   1              ISP_ADDRH = (uchar)(byte_addr >> 8);            /* 地址赋值     */
  74   1              ISP_ADDRL = (uchar)(byte_addr & 0x00ff);
  75   1              ISP_CMD   = ISP_CMD     & 0xf8;                 /* 清除低3位    */
  76   1              ISP_CMD   = ISP_CMD     | RdCommand;           /* 写入读命令    */
  77   1              ISPgoon();                                      /* 触发执行     */
  78   1              ISP_IAP_disable();                              /* 关闭ISP,IAP功能*/
  79   1              return (ISP_DATA);                              /* 返回读到的数据*/
  80   1      }
  81                            /* = 扇区擦除 = */
  82          void SectorErase(uint sector_addr)
  83          {
  84   1              uint iSectorAddr;
  85   1              iSectorAddr = (sector_addr & 0xfe00);         /* 取扇区地址 */
  86   1              ISP_ADDRH = (uchar)(iSectorAddr >> 8);
  87   1              ISP_ADDRL = 0x00;
  88   1              ISP_CMD = ISP_CMD & 0xf8;                     /* 清空低3位      */
  89   1              ISP_CMD = ISP_CMD | EraseCommand;             /* 擦除命令3      */
  90   1              ISPgoon();                                      /* 触发执行     */
  91   1              ISP_IAP_disable();                              /* 关闭ISP,IAP功能*/
  92   1      
  93   1      }
  94                         /* = 字节写 = */
  95          void byte_write(uint byte_addr, uchar original_data)
  96          {
  97   1              ISP_ADDRH =     (uchar)(byte_addr >> 8);        /* 取地址       */
  98   1              ISP_ADDRL =     (uchar)(byte_addr & 0x00ff);
  99   1              ISP_CMD  = ISP_CMD & 0xf8;                      /* 清低3位      */
 100   1              ISP_CMD  = ISP_CMD | PrgCommand;                /* 写命令2      */
 101   1              ISP_DATA = original_data;                       /* 写入数据准备 */
 102   1              ISPgoon();                                      /* 触发执行     */
 103   1              ISP_IAP_disable();                              /* 关闭IAP功能  */
 104   1      }
 105          
 106          
 107          /********举例说明********************************************
 108            byte_read(Sector[1][3])        读一个字节
 109            byte_write(Sector[1][3],char)  把char写到这个字节中
 110             SectorErase(Sector[1][2])     扇区清除 
 111          **/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    100    ----
   CONSTANT SIZE    =    160    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V7.01  EEPROM                                                                 08/13/2009 20:46:42 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
