C51 COMPILER V7.01  SJSERIAL                                                               04/27/2014 14:00:40 PAGE 1   


C51 COMPILER V7.01, COMPILATION OF MODULE SJSERIAL
OBJECT MODULE PLACED IN sjSerial.OBJ
COMPILER INVOKED BY: C:\GreenTools\Keil\C51\BIN\C51.EXE sjSerial.c LARGE OPTIMIZE(SIZE) BROWSE MODP2 DEBUG OBJECTEXTEND

stmt level    source

   1          #include "sjSerial.h"
   2          #include "sjDefine.h"
   3          //#include "reg52.h"
   4          #include <stdio.h>
   5          
   6          BYTE spbuf[SP_BUFFER_MAX];      ///< serial port fifo buffer
   7          static BYTE *spHead,*spTail;    ///< buffer head and tailst
   8          static BYTE spSFlag;///<serial port flag for send use
   9          
  10          BYTE spbuf2[SP_BUFFER_MAX];     ///< serial port fifo buffer
  11          static BYTE *spHead2,*spTail2;  ///< buffer head and tailst
  12          static BYTE spSFlag2;///<serial port flag for send use
  13          
  14          //const for SerialPort Status
  15          #define SPBUSY  0xd6    
  16          #define SPIDLE  0xd8
  17          
  18          
  19              
  20          void InitCOM1(void)             //9600bps@11.0592MHz
  21          {
  22   1              ACC = P_SW1;
  23   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
  24   1          P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
  25   1              SCON = 0x50;            //8bit data, no parity
  26   1              AUXR |= 0x40;           //1T of Fosc
  27   1              AUXR &= 0xFE;           //timer1 to com1
  28   1              TMOD &= 0x0F;           //16bit reload
  29   1              TL1 = (65536 - (FOSC/4/BAUD1));   //????????
  30   1          TH1 = (65536 - (FOSC/4/BAUD1))>>8;
  31   1              //TL1 = 0xE8;   TH1 = 0xFF;             //115200 @11.0592MHz
  32   1              //TL1 = 0xD0;   TH1 = 0xFF;     //57600 @11.0592MHz     
  33   1              //TL1 = 0xE0;   TH1 = 0xFE;     //9600, @11.0592MHz
  34   1              //TL1 = 0x80;   TH1 = 0xFB;     //2400, @11.0592MHz
  35   1              TR1 = 1;                    //start timer1
  36   1          ES = 1;                     //enable serial port interrupt
  37   1          
  38   1              //ET1 = 0;              //disable interrupt
  39   1      }
  40          
  41          void InitCOM2(void)             //57600bps@11.0592MHz
  42          {
  43   1              P_SW2 |= S2_S0;             //S2_S0=1 (P4.6/RxD2_2, P4.7/TxD2_2)
  44   1              S2CON = 0x50;           //8bit data
  45   1              AUXR |= 0x14;           //1T to Fosc
  46   1              T2L = (65536 - (FOSC/4/BAUD2));   //????????
  47   1          T2H = (65536 - (FOSC/4/BAUD2))>>8;
  48   1              //TL2 = 0xE8;   TH2 = 0xFF;     //115200 @11.0592MHz
  49   1              //TL2 = 0xD0;   TH2 = 0xFF;     //57600 @11.0592MHz     
  50   1              //TL2 = 0xE0;   TH2 = 0xFE;     //9600, @11.0592MHz
  51   1              //TL2 = 0x80;   TH2 = 0xFB;     //2400, @11.0592MHz
  52   1      
  53   1      }
  54          
  55          
C51 COMPILER V7.01  SJSERIAL                                                               04/27/2014 14:00:40 PAGE 2   

  56          
  57          
  58          
  59          /********************************
  60          *       Add the byte recieved to the 
  61          *       Tail of the buffer
  62          ********************************/
  63          void sjSerialHandler(void) interrupt 4 using 2
  64          {
  65   1              //just handle serial interrupt 1
  66   1              if(TI)
  67   1              {
  68   2                      TI = 0;
  69   2                      spSFlag = SPIDLE;       
  70   2              }
  71   1              if(RI)
  72   1              {
  73   2                      *spTail = SBUF;
  74   2                      spTail = spTail+1;
  75   2                      if(spTail == (spbuf+SP_BUFFER_MAX))
  76   2                              spTail = spbuf;
  77   2                      RI = 0;
  78   2              }
  79   1      }
  80          
  81          /********************************
  82          *       Add the byte recieved to the 
  83          *       Tail of the buffer
  84          ********************************/
  85          void sjSerialHandler2(void) interrupt 8 using 3
  86          {
  87   1              //just handle serial interrupt 1
  88   1              if(S2CON & S2TI)
  89   1              {
  90   2                      S2CON &= ~S2TI;
  91   2                      spSFlag2 = SPIDLE;      
  92   2              }
  93   1              if (S2CON & S2RI)
  94   1              {
  95   2                      *spTail2 = S2BUF;
  96   2                      spTail2 = spTail2 + 1;
  97   2                      if(spTail2 == (spbuf2+SP_BUFFER_MAX))
  98   2                              spTail2 = spbuf2;
  99   2                      S2CON &= ~S2RI;
 100   2              }
 101   1      }
 102          /**
 103          *       @return TRUE when data availabel ,FALSE while not
 104          */
 105          BYTE sjSerialIsDataWaiting()
 106          {
 107   1              if(spHead == spTail)
 108   1                      return 0;
 109   1              if(spTail > spHead)
 110   1                      return spTail-spHead;
 111   1      
 112   1              return spTail+SP_BUFFER_MAX-spHead;
 113   1      }
 114          /**
 115          *       Send One Byte on Serial port , (under construction)
 116          *       and return with no wait for send finished
 117          *       @param udata the Byte to send
C51 COMPILER V7.01  SJSERIAL                                                               04/27/2014 14:00:40 PAGE 3   

 118          *       @param PortID serial port to use
 119          */
 120          void sjSerialSendByte(BYTE udata)
 121          {
 122   1              spSFlag=SPBUSY;
 123   1              //Send the udata
 124   1              SBUF = udata;
 125   1              while(spSFlag == SPBUSY)        
 126   1                      ;
 127   1      }
 128          /**
 129          *       Wait One Byte until that appeared,
 130          *       it perform read byte function at the same time
 131          *       @param PortID serial port to use
 132          *       @return Byte we received
 133          */
 134          BYTE sjSerialWaitForOneByte()
 135          {
 136   1              BYTE udata;
 137   1              while(spHead == spTail) 
 138   1              {
 139   2              }
 140   1              udata = *spHead;
 141   1              spHead = spHead+1;
 142   1              if(spHead == (spbuf+SP_BUFFER_MAX))
 143   1                      spHead = spbuf;
 144   1              return udata;
 145   1      }
 146          
 147          //=================COM 2 related functions
 148          /**
 149          *       @return TRUE when data availabel ,FALSE while not
 150          */
 151          BYTE sjSerialIsDataWaiting2()
 152          {
 153   1              if(spHead2 == spTail2)
 154   1                      return 0;
 155   1              if(spTail2 > spHead2)
 156   1                      return spTail2-spHead2;
 157   1      
 158   1              return spTail2 + SP_BUFFER_MAX-spHead;
 159   1      }
 160          /**
 161          *       Send One Byte on Serial port , (under construction)
 162          *       and return with no wait for send finished
 163          *       @param udata the Byte to send
 164          *       @param PortID serial port to use
 165          */
 166          void sjSerialSendByte2(BYTE udata)
 167          {
 168   1              spSFlag2=SPBUSY;
 169   1              //Send the udata
 170   1              S2BUF = udata;
 171   1              while(spSFlag2 == SPBUSY)       
 172   1                      ;
 173   1      }
 174          /**
 175          *       Wait One Byte until that appeared,
 176          *       it perform read byte function at the same time
 177          *       @param PortID serial port to use
 178          *       @return Byte we received
 179          */
C51 COMPILER V7.01  SJSERIAL                                                               04/27/2014 14:00:40 PAGE 4   

 180          BYTE sjSerialWaitForOneByte2()
 181          {
 182   1              BYTE udata;
 183   1              while(spHead2 == spTail2)       
 184   1              {
 185   2              }
 186   1              udata = *spHead2;
 187   1              spHead2 = spHead2 + 1;
 188   1              if(spHead2 == (spbuf2 + SP_BUFFER_MAX))
 189   1                      spHead2 = spbuf2;
 190   1              return udata;
 191   1      }
 192          
 193          /**
 194          *       @brief Set Initially for all serial port(under construction)
 195          *       
 196          *       Serial port format will be set identically
 197          */
 198          void sjSerialInit()
 199          {
 200   1              spHead=spbuf;
 201   1              spTail=spbuf;
 202   1              spSFlag=SPIDLE;
 203   1      
 204   1              spHead2=spbuf2;
 205   1              spTail2=spbuf2;
 206   1              spSFlag2=SPIDLE;
 207   1      
 208   1              InitCOM1();
 209   1              InitCOM2();
 210   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    773    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     78    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
