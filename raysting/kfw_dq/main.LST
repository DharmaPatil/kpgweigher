C51 COMPILER V7.01  MAIN                                                                   08/22/2009 16:21:18 PAGE 1   


C51 COMPILER V7.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: c:\GreenTools\Keil\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          //#include <t89c51rd2.h>
   2          #include "stc51.h"
   3          #include "utili.h"
   4          #include "lcd.h"
   5          #include "key.h"
   6          #include "stdio.h"
   7          #include "eeprom.h"
   8          RUNDATA rdata;
   9          xdata char buf[20];
  10          uchar key;
  11          
  12          double lastrx = -1;
  13          void analog_timer()     interrupt 1 using 1
  14          {
  15   1              Key_Scan();
  16   1      }
  17          
  18          void State_Update();
  19          void State_Display()
  20          {
  21   1              EA = 0;
  22   1              if(rdata.StateId == PG_MSG_RZERO)
  23   1              {
  24   2                      LCD_Cls();
  25   2                      LCD_PrintHz16(20,  10, "正在扣除残余电阻...");
  26   2                      rdata.StateId = PG_MAIN;
  27   2                      EA = 1;
  28   2                      return;
  29   2              }
  30   1              if(rdata.StateId == PG_MSG_VZERO)
  31   1              {
  32   2                      LCD_Cls();
  33   2                      LCD_PrintHz16(20,  10, "正在进行扣零操作...");
  34   2                      rdata.StateId = PG_MAIN;
  35   2                      EA = 1;
  36   2                      return;
  37   2              }
  38   1      
  39   1              if(rdata.StateId == PG_MAIN){
  40   2                      LCD_Cls();
  41   2                      if(rdata.Current == 0)
  42   2                              sprintf(buf,"Ix= 1XA");
  43   2                      if(rdata.Current == 1)
  44   2                              sprintf(buf,"Ix= 1X0.707A");
  45   2                      if(rdata.Current == 2)
  46   2                              sprintf(buf,"Ix= 1X1.414A");
  47   2      
  48   2                      LCD_Print6X8(11,1,buf);
  49   2      
  50   2                      if(rdata.Range == RANGE_20m)
  51   2                              sprintf(buf," 20m");
  52   2                      if(rdata.Range == RANGE_200m)
  53   2                              sprintf(buf,"200m");
  54   2                      if(rdata.Range == RANGE_2)
  55   2                              sprintf(buf,"   2");
C51 COMPILER V7.01  MAIN                                                                   08/22/2009 16:21:18 PAGE 2   

  56   2                      if(rdata.Range == RANGE_20)
  57   2                              sprintf(buf,"  20");
  58   2                      if(rdata.Range == RANGE_200)
  59   2                              sprintf(buf," 200");
  60   2                      if(rdata.Range == RANGE_2k)
  61   2                              sprintf(buf,"  2k");
  62   2                      if(rdata.Range == RANGE_20k)
  63   2                              sprintf(buf," 20k");
  64   2                      if(rdata.Range == RANGE_200k)
  65   2                              sprintf(buf,"200k");
  66   2                      if(rdata.Range == RANGE_2M)
  67   2                              sprintf(buf,"  2M");
  68   2                      if(rdata.Range == RANGE_20M)
  69   2                              sprintf(buf," 20M");
  70   2      
  71   2                      LCD_Print6X8(120,1,buf);
  72   2      //              LCD_PrintHz16(150,1,"Ω(量程)");
  73   2      
  74   2                      sprintf(buf,"P= %.4f",rdata.Pvalue);
  75   2                      LCD_Print6X8(11,54,buf);
  76   2      //              LCD_PrintHz16(61,54,"Ω");
  77   2      
  78   2                      sprintf(buf,"T= %.1f",rdata.Temp);
  79   2                      LCD_Print6X8(120,54,buf);
  80   2                      
  81   2                      State_Update();
  82   2                      EA = 1;
  83   2                      return;
  84   2              }
  85   1              if(rdata.StateId == PG_MENU1){
  86   2                      LCD_Cls();
  87   2                      LCD_PrintHz16(2,  2, " 1.量程选择");
  88   2                      LCD_PrintHz16(120,2, " 2.校准电阻");
  89   2                      LCD_PrintHz16(2,  23," 3.执行校零");
  90   2                      LCD_PrintHz16(120,23," 4.电阻率设定");
  91   2                      LCD_PrintHz16(2,  46," 5.串口设定");
  92   2                      LCD_PrintHz16(120,46," 6.使用帮助");
  93   2                      State_Update();
  94   2                      EA = 1;
  95   2                      return;
  96   2      
  97   2              }
  98   1              if(rdata.StateId == PG_RANGE){
  99   2                      LCD_Cls();
 100   2                      LCD_PrintHz16(2,  2,   "请选择新的量程:   单位Ω");
 101   2                      LCD_Print6X8(2  , 25, " 0:20m");
 102   2                      LCD_Print6X8(62 , 25, " 1:200m");
 103   2                      LCD_Print6X8(122, 25, " 2:2");
 104   2                      LCD_Print6X8(182 ,25, " 3:20");
 105   2                      LCD_Print6X8(2 ,  36, " 4:200");
 106   2                      LCD_Print6X8(62  ,36, " 5:2k");
 107   2                      LCD_Print6X8(122 ,36, " 6:20k");
 108   2                      LCD_Print6X8(182, 36, " 7:200k");
 109   2                      LCD_Print6X8(2 ,  47, " 8:2M");
 110   2                      LCD_Print6X8(62 , 47, " 9:20M");
 111   2                      State_Update();
 112   2                      EA = 1;
 113   2                      return;
 114   2      
 115   2              }
 116   1              if(rdata.StateId == PG_CALISET){
 117   2                      LCD_Cls();
C51 COMPILER V7.01  MAIN                                                                   08/22/2009 16:21:18 PAGE 3   

 118   2                      LCD_PrintHz16(2,  2, "当前标准电阻值:");
 119   2                      LCD_PrintHz16(2,22,  "   输入新阻值:");
 120   2                      sprintf(buf,"%.4f",rdata.Rcali[rdata.Range]);
 121   2                      LCD_Print8X16(120,10,buf);
 122   2                      State_Update();
 123   2                      EA = 1;
 124   2                      return;
 125   2      
 126   2              }
 127   1              if(rdata.StateId == PG_PSET_L){
 128   2                      LCD_Cls();
 129   2                      LCD_PrintHz16(2,  2, "当前导线长度:");
 130   2                      LCD_PrintHz16(2,22,  "   输入新长度:");
 131   2                      sprintf(buf,"%.4f",rdata.Plength);
 132   2                      LCD_Print8X16(120,10,buf);
 133   2      
 134   2                      State_Update();
 135   2                      EA = 1;
 136   2                      return;
 137   2      
 138   2              }
 139   1      
 140   1              if(rdata.StateId == PG_PSET_R){
 141   2                      LCD_Cls();
 142   2                      LCD_PrintHz16(2,  2, "当前圆截面半径:");
 143   2                      LCD_PrintHz16(2,22,  "   输入新半径:");
 144   2                      sprintf(buf,"%.4f",rdata.Pradius);
 145   2                      LCD_Print8X16(120,10,buf);
 146   2      
 147   2                      State_Update();
 148   2                      EA = 1;
 149   2                      return;
 150   2      
 151   2              }
 152   1              if(rdata.StateId == PG_PSET_W){
 153   2                      LCD_Cls();
 154   2                      LCD_PrintHz16(2,  2, "当前方截面宽度:");
 155   2                      LCD_PrintHz16(2,22,  "   输入新宽度:");
 156   2                      sprintf(buf,"%.4f",rdata.Pwidth);
 157   2                      LCD_Print8X16(120,10,buf);
 158   2      
 159   2                      State_Update();
 160   2                      EA = 1;
 161   2                      return;
 162   2      
 163   2              }
 164   1              if(rdata.StateId == PG_PSET_H){
 165   2                      LCD_Cls();
 166   2                      LCD_PrintHz16(2,  2, "当前方截面高度:");
 167   2                      LCD_PrintHz16(2,22,  "   输入新高度:");
 168   2                      sprintf(buf,"%.4f",rdata.Pheight);
 169   2                      LCD_Print8X16(120,10,buf);
 170   2      
 171   2                      State_Update();
 172   2                      EA = 1;
 173   2                      return;
 174   2      
 175   2              }
 176   1      
 177   1              if(rdata.StateId == PG_PSET){
 178   2                      LCD_Cls();
 179   2                      LCD_PrintHz16(2,   2," 电阻率参数:");
C51 COMPILER V7.01  MAIN                                                                   08/22/2009 16:21:18 PAGE 4   

 180   2                      LCD_PrintHz16(110, 2," 1.导线长度");
 181   2                      LCD_PrintHz16(2,  22," 2.方截面宽度");
 182   2                      LCD_PrintHz16(110,22," 3.方截面高度");
 183   2                      LCD_PrintHz16(2,  42," 4.圆截面半径");
 184   2                      LCD_PrintHz16(110,42," 5.不计算电阻率");
 185   2                      State_Update();
 186   2                      EA = 1;
 187   2                      return;
 188   2              }
 189   1              if(rdata.StateId == PG_SET232){
 190   2                      LCD_Cls();
 191   2                      LCD_PrintHz16(12,   2, "波特率设定:");
 192   2                      LCD_PrintHz16(12,   22," 1. 关闭串口");
 193   2                      LCD_PrintHz16(12,   42," 2. 2400");
 194   2                      LCD_PrintHz16(120,  42," 3. 9000");
 195   2                      State_Update();
 196   2                      EA = 1;
 197   2                      return;
 198   2      
 199   2              }
 200   1              if(rdata.StateId == PG_HELP){
 201   2                      LCD_Cls();
 202   2                      LCD_PrintHz16(40, 2,  "1.精度说明");
 203   2                      LCD_PrintHz16(40, 20, "2.联系地址");
 204   2                      LCD_PrintHz16(40, 40, "3.使用设置");
 205   2                      EA = 1;
 206   2                      return;
 207   2      
 208   2              }
 209   1              if(rdata.StateId == PG_HELP_ADDR){
 210   2                      LCD_Cls();
 211   2                      LCD_PrintHz16(60, 2,  "兰斯汀仪表研究所");
 212   2                      LCD_Print8X16(40, 20, "www.raysting.com.cn");
 213   2                      LCD_Print8X16(40, 40, "raysting@126.com");
 214   2                      EA = 1;
 215   2                      return;
 216   2      
 217   2              }
 218   1              if(rdata.StateId == PG_HELP_PREC){
 219   2                      LCD_Cls();
 220   2                      LCD_PrintHz16(60, 18, "产品描述");
 221   2                      LCD_Print8X16(40, 40, "www.raysting.com.cn");
 222   2                      EA = 1;
 223   2                      return;
 224   2      
 225   2              }
 226   1              if(rdata.StateId == PG_HELP_SET){
 227   2                      LCD_Cls();
 228   2                      LCD_PrintHz16(60, 18,  "产品设置");
 229   2                      LCD_Print8X16(40, 40, "www.raysting.com.cn");
 230   2                      EA = 1;
 231   2                      return;
 232   2      
 233   2              }
 234   1              EA = 1;
 235   1      }
 236          void State_Update()
 237          {
 238   1              EA = 0;
 239   1              if(rdata.StateId == PG_MAIN){
 240   2                      LCD_ClsBlock(10,20,10+24*8,52);
 241   2                      sprintf(buf,"%.4f",rdata.Rx);
C51 COMPILER V7.01  MAIN                                                                   08/22/2009 16:21:18 PAGE 5   

 242   2                      sprintf(buf+8," ");
 243   2                      LCD_Print24X32(10,18,buf);
 244   2                      //LCD_Print8X16(205,34,"m");
 245   2                      LCD_PrintHz16(216,34,"Ω");
 246   2              }
 247   1              if(rdata.StateId == PG_MENU1){
 248   2      
 249   2                      if(rdata.pos_len == 0)
 250   2                              LCD_Print6X8(2,   2,"*");
 251   2                      else
 252   2                              LCD_Print6X8(2,   2," ");
 253   2                      if(rdata.pos_len == 1)
 254   2                              LCD_Print6X8(120, 2,"*");
 255   2                      else
 256   2                              LCD_Print6X8(120, 2," ");
 257   2                      if(rdata.pos_len == 2)
 258   2                              LCD_Print6X8(2,  23,"*");
 259   2                      else
 260   2                          LCD_Print6X8(2,  23," ");
 261   2                      if(rdata.pos_len == 3)
 262   2                              LCD_Print6X8(120,23,"*");
 263   2                      else
 264   2                              LCD_Print6X8(120,23," ");
 265   2                      if(rdata.pos_len == 4)
 266   2                              LCD_Print6X8(2,  46,"*");
 267   2                      else
 268   2                              LCD_Print6X8(2,  46," ");
 269   2                      if(rdata.pos_len == 5)
 270   2                              LCD_Print6X8(120,46,"*");
 271   2                      else
 272   2                              LCD_Print6X8(120,46," ");
 273   2      
 274   2              }
 275   1              if(rdata.StateId == PG_RANGE){
 276   2                      if(rdata.pos_len == 0)
 277   2                              LCD_Print6X8(2  , 25, "*");
 278   2                      else
 279   2                              LCD_Print6X8(2  , 25, " ");
 280   2      
 281   2                      if(rdata.pos_len == 1)
 282   2                              LCD_Print6X8(62  , 25, "*");
 283   2                      else
 284   2                              LCD_Print6X8(62  , 25, " ");
 285   2                      if(rdata.pos_len == 2)
 286   2                              LCD_Print6X8(122 , 25, "*");
 287   2                      else
 288   2                              LCD_Print6X8(122 , 25, " ");
 289   2                      if(rdata.pos_len == 3)
 290   2                              LCD_Print6X8(182, 25, "*");
 291   2                      else
 292   2                              LCD_Print6X8(182, 25, " ");
 293   2                      if(rdata.pos_len == 4)
 294   2                              LCD_Print6X8(2 ,36, "*");
 295   2                      else
 296   2                              LCD_Print6X8(2 ,36, " ");
 297   2                      if(rdata.pos_len == 5)
 298   2                              LCD_Print6X8(62 ,36, "*");
 299   2                      else
 300   2                              LCD_Print6X8(62 ,36, " ");
 301   2                      if(rdata.pos_len == 6)
 302   2                              LCD_Print6X8(122  , 36, "*");
 303   2                      else
C51 COMPILER V7.01  MAIN                                                                   08/22/2009 16:21:18 PAGE 6   

 304   2                              LCD_Print6X8(122  , 36, " ");
 305   2                      if(rdata.pos_len == 7)
 306   2                              LCD_Print6X8(182 , 36, "*");
 307   2                      else
 308   2                              LCD_Print6X8(182 , 36, " ");
 309   2                      if(rdata.pos_len == 8)
 310   2                              LCD_Print6X8(2, 47, "*");
 311   2                      else
 312   2                              LCD_Print6X8(2, 47, " ");
 313   2                      if(rdata.pos_len == 9)
 314   2                              LCD_Print6X8(62 ,47, "*");
 315   2                      else
 316   2                              LCD_Print6X8(62 ,47, " ");
 317   2      
 318   2      
 319   2              }
 320   1              if(rdata.StateId == PG_CALISET){
 321   2                      LCD_Print6X8(120,34,"        ");
 322   2                      LCD_Print6X8(120,34,rdata.tempbuf);
 323   2              }
 324   1              if(rdata.StateId == PG_PSET_R){
 325   2                      LCD_Print6X8(120,34,"        ");
 326   2                      LCD_Print6X8(120,34,rdata.tempbuf);
 327   2              }
 328   1              if(rdata.StateId == PG_PSET_L){
 329   2                      LCD_Print6X8(120,34,"        ");
 330   2                      LCD_Print6X8(120,34,rdata.tempbuf);
 331   2              }
 332   1      
 333   1              if(rdata.StateId == PG_PSET_W){
 334   2                      LCD_Print6X8(120,34,"        ");
 335   2                      LCD_Print6X8(120,34,rdata.tempbuf);
 336   2              }
 337   1              if(rdata.StateId == PG_PSET_H){
 338   2                      LCD_Print6X8(120,34,"        ");
 339   2                      LCD_Print6X8(120,34,rdata.tempbuf);
 340   2              }
 341   1              if(rdata.StateId == PG_PSET){
 342   2                      if(rdata.pos_len == 0)
 343   2                              LCD_Print6X8(110,   2,"*");
 344   2                      else
 345   2                              LCD_Print6X8(110,   2," ");
 346   2                      if(rdata.pos_len == 1)
 347   2                              LCD_Print6X8(2,   22,"*");
 348   2                      else
 349   2                              LCD_Print6X8(2,   22," ");
 350   2                      if(rdata.pos_len == 2)
 351   2                              LCD_Print6X8(110,   22,"*");
 352   2                      else
 353   2                              LCD_Print6X8(110,  22," ");
 354   2                      if(rdata.pos_len == 3)
 355   2                              LCD_Print6X8(2,   42,"*");
 356   2                      else
 357   2                              LCD_Print6X8(2,   42," ");
 358   2                      if(rdata.pos_len == 4)
 359   2                              LCD_Print6X8(110,   42,"*");
 360   2                      else
 361   2                              LCD_Print6X8(110,   42," ");
 362   2      
 363   2                              }
 364   1              if(rdata.StateId == PG_SET232){
 365   2                      if(rdata.pos_len == 0)
C51 COMPILER V7.01  MAIN                                                                   08/22/2009 16:21:18 PAGE 7   

 366   2                              LCD_Print6X8(12,   22,"*");
 367   2                      else
 368   2                              LCD_Print6X8(12,   22," ");
 369   2                      if(rdata.pos_len == 1)
 370   2                              LCD_Print6X8(12,   42,"*");
 371   2                      else
 372   2                              LCD_Print6X8(12,   42," ");
 373   2                      if(rdata.pos_len == 2)
 374   2                              LCD_Print6X8(120,  42,"*");
 375   2                      else
 376   2                              LCD_Print6X8(120,  42," ");
 377   2              }
 378   1              EA = 1;
 379   1      }
 380          
 381          
 382          
 383          ulong ch1val,ch2val;
*** WARNING C231 IN LINE 383 OF MAIN.C: 'ch1val': redefinition
*** WARNING C231 IN LINE 383 OF MAIN.C: 'ch2val': redefinition
 384          #define ONESEC  1282
 385          sbit KTT=P3^7;
 386          void main()
 387          {
 388   1              uchar i,pos;
 389   1              double chs,chx;
 390   1              int j;
 391   1              KTT = 0;
 392   1              LCD_Init();
 393   1              Key_Init();
 394   1              State_Init();   
 395   1      
 396   1              //set serial port parameter (clock 11.0592M)
 397   1              //9600 baut rate 8 data non parity and 1 stop.
 398   1              SCON = 0x70;
 399   1              PCON = 0x00;
 400   1      
 401   1              //timer count
 402   1              TH1 = 0xfd;
 403   1              TH0 = 0xd8;
 404   1              TL0 = 0xf0;
 405   1              //use timer 1 to be serial
 406   1              //use timer 0 too
 407   1              TMOD = 0x22;
 408   1              TR1 = 1; //start timer 1
 409   1              TR0 = 1; //start timer 0
 410   1              ET1 = 0;
 411   1              ES = 1;
 412   1              PS = 1;
 413   1              EA = 1;
 414   1              ET0 = 1;
 415   1              
 416   1              sm_Init();
 417   1      
 418   1              key = KEY_INVALID;
 419   1               while(1)
 420   1               { 
 421   2                      if(key != KEY_INVALID)
 422   2                      {
 423   3                              if((key == KEY_BTN1)||(key == KEY_BTN2)||(key == KEY_BTN3)||(key == KEY_BTN4))
 424   3                              {
 425   4                                      if(key == KEY_BTN1) //auto range or not
C51 COMPILER V7.01  MAIN                                                                   08/22/2009 16:21:18 PAGE 8   

 426   4                                      {
 427   5                                              rdata.Rauto = (rdata.Rauto == AUTO_OFF) ? AUTO_ON : AUTO_OFF;
 428   5                                              display_buttons(key,rdata.Rauto);
 429   5                                      }
 430   4                                      if(key == KEY_BTN2) //auto ktt or not
 431   4                                      {
 432   5                                              rdata.Rktt = (rdata.Rktt == KTT_OFF) ? KTT_ON : KTT_OFF;
 433   5                                              display_buttons(key,rdata.Rktt);
 434   5                                      }
 435   4                                      if(key == KEY_BTN3) //current change
 436   4                                      {
 437   5                                              display_buttons(key,1); //start to switch the current
 438   5                                              rdata.Current++;
 439   5                                              if(rdata.Current > CURRENT_SQRT0P5)
 440   5                                                      rdata.Current = CURRENT_1; 
 441   5                                              //TODO switch the current
 442   5                                              display_buttons(key,0);
 443   5      
 444   5                                      }
 445   4                                      if(key == KEY_BTN4) //remove zero
 446   4                                      {
 447   5                                              display_buttons(key,1); //start to remove zero
 448   5                                              rdata.R0 = rdata.Rx;
 449   5                                              display_buttons(key,0);
 450   5                                      }
 451   4                                      SaveToEEPROM();
 452   4                                      State_Display();
 453   4                              }else{
 454   4                                      i = rdata.StateId;
 455   4                                      pos = rdata.pos_len;
 456   4                                      State_Change(key);
 457   4                                      
 458   4                                      if(i != rdata.StateId){ 
 459   5                                              State_Display();
 460   5                                      }else{
 461   5                                          //if((pos != rdata.pos_len) || (key == KEY_UP) || (key == KEY_DN))
 462   5                                                      State_Update();
 463   5                                      }
 464   4                              }
 465   3                              key = KEY_INVALID;
 466   3                      }else{
 467   3                              if(rdata.StateId != PG_MAIN) //配置页不处理数据
 468   3                                       continue;      
 469   3                              if(j > 0)
 470   3                              {
 471   4                                      j--;
 472   4                                      continue;
 473   4                              }
 474   3                      }
 475   2              }       
 476   1      }
*** WARNING C280 IN LINE 389 OF MAIN.C: 'chs': unreferenced local variable
*** WARNING C280 IN LINE 389 OF MAIN.C: 'chx': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2954    ----
   CONSTANT SIZE    =    711    ----
   XDATA SIZE       =    131      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V7.01  MAIN                                                                   08/22/2009 16:21:18 PAGE 9   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
