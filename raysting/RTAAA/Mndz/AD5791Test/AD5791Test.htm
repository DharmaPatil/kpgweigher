<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\000 D drive\d\Work\FY2012\example code\Hao\AD5791\project\AD5791Test\AD5791Test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\000 D drive\d\Work\FY2012\example code\Hao\AD5791\project\AD5791Test\AD5791Test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Wed Feb 01 13:36:08 2012
<BR><P>
<H3>Maximum Stack Usage =        136 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; __2printf &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[133f70c]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[133d72c]">main</a>
 <LI><a href="#[133e08c]">fputc</a>
 <LI><a href="#[133a360]">_printf_input_char</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[133a93c]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[1333e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[133a6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1333e98]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[133a93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1333e5c]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133a6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1333e20]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1333c7c]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1333c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[1333c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[1333b8c]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[133abd0]"></a>_printf_percent</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[133afcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (via Veneer)
</UL>

<P><STRONG><a name="[133acc0]"></a>_printf_x</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[133c1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex (via Veneer)
</UL>

<P><STRONG><a name="[133a234]"></a>_printf_percent_end</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[1339334]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1337174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1339eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[1337804]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[133787c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[1337c3c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[1337ad4]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[1337714]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[133778c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[1337b4c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[1337a5c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[1338038]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[1337e94]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[1337e1c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[1337da4]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[1337d2c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[1337cb4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[1337f48]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[13376d8]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[1337bc4]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[13379e4]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[1337fc0]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[1336580]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1336f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[1335a04]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[1335824]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[13357e8]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1335950]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[1335ab8]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[13358d8]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[133a6e4]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1333e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[133a93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1339fa0]"></a>__rt_entry_presh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[1339c1c]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1339898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1339eec]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1339334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[1339f28]"></a>__rt_entry_postsh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[1339e38]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[1339730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[1339e74]"></a>__rt_entry_postli_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[1338bb4]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1339730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[1336f1c]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[1336580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[1336f58]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[1336ee0]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[133dee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[133f70c]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aduc702x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1339898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[133f61c]"></a>IRQ_Handler</STRONG> (ARM, 44 bytes, Stack size 24 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133f658]"></a>FIQ_Handler</STRONG> (ARM, 44 bytes, Stack size 24 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133f5a4]"></a>SWI_Handler</STRONG> (ARM, 44 bytes, Stack size 24 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133f568]"></a>Undef_Handler</STRONG> (ARM, 44 bytes, Stack size 24 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133f5e0]"></a>PAbt_Handler</STRONG> (ARM, 44 bytes, Stack size 24 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133f694]"></a>DAbt_Handler</STRONG> (ARM, 44 bytes, Stack size 24 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133e2e4]"></a>ADuC7026InputBit</STRONG> (ARM, 324 bytes, Stack size 4 bytes, aduc7026driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADuC7026InputBit
</UL>
<BR>[Called By]<UL><LI><a href="#[133e104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026SpiOperation
<LI><a href="#[133e1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026Initialization
</UL>

<P><STRONG><a name="[133e2a8]"></a>ADuC7026OutputBit</STRONG> (ARM, 356 bytes, Stack size 0 bytes, aduc7026driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133d678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791HardwareReset
<LI><a href="#[133d6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791HardwareLoad
<LI><a href="#[133d6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791HardwareClear
<LI><a href="#[133e104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026SpiOperation
<LI><a href="#[133e1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026Initialization
</UL>

<P><STRONG><a name="[133e26c]"></a>ADuC7026InitializePll</STRONG> (ARM, 32 bytes, Stack size 0 bytes, aduc7026driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133e1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026Initialization
</UL>

<P><STRONG><a name="[133e230]"></a>ADuC7026InitializeUart</STRONG> (ARM, 68 bytes, Stack size 0 bytes, aduc7026driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133e1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026Initialization
</UL>

<P><STRONG><a name="[133e1f4]"></a>ADuC7026InitializeInterrupt</STRONG> (ARM, 20 bytes, Stack size 0 bytes, aduc7026driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133e1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026Initialization
</UL>

<P><STRONG><a name="[133e1b8]"></a>ADuC7026Initialization</STRONG> (ARM, 92 bytes, Stack size 4 bytes, aduc7026driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADuC7026Initialization &rArr; ADuC7026InputBit
</UL>
<BR>[Calls]<UL><LI><a href="#[133e1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026InitializeInterrupt
<LI><a href="#[133e230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026InitializeUart
<LI><a href="#[133e26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026InitializePll
<LI><a href="#[133e2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026OutputBit
<LI><a href="#[133e2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026InputBit
</UL>
<BR>[Called By]<UL><LI><a href="#[133d72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[133e17c]"></a>ADuC7026DelayMs</STRONG> (ARM, 76 bytes, Stack size 0 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133e140]"></a>ADuC7026DelayUs</STRONG> (ARM, 76 bytes, Stack size 0 bytes, aduc7026driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133d678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791HardwareReset
</UL>

<P><STRONG><a name="[133e104]"></a>ADuC7026SpiOperation</STRONG> (ARM, 220 bytes, Stack size 32 bytes, aduc7026driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ADuC7026SpiOperation &rArr; ADuC7026InputBit
</UL>
<BR>[Calls]<UL><LI><a href="#[133e2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026OutputBit
<LI><a href="#[133e2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026InputBit
</UL>
<BR>[Called By]<UL><LI><a href="#[133d5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToAD5791ViaSPI
<LI><a href="#[133d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromAD5791ViaSPI
</UL>

<P><STRONG><a name="[133e0c8]"></a>sendchar</STRONG> (ARM, 60 bytes, Stack size 0 bytes, aduc7026driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133df24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
<LI><a href="#[133e08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[133e08c]"></a>fputc</STRONG> (ARM, 28 bytes, Stack size 4 bytes, aduc7026driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[133e0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendchar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2printf.o(.text)
</UL>
<P><STRONG><a name="[133e050]"></a>fgetc</STRONG> (ARM, 12 bytes, Stack size 0 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133e014]"></a>fclose</STRONG> (ARM, 12 bytes, Stack size 0 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133dfd8]"></a>ferror</STRONG> (ARM, 12 bytes, Stack size 0 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133df9c]"></a>fseek</STRONG> (ARM, 12 bytes, Stack size 0 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133df60]"></a>fflush</STRONG> (ARM, 12 bytes, Stack size 0 bytes, aduc7026driver.o(.text), UNUSED)

<P><STRONG><a name="[133df24]"></a>_ttywrch</STRONG> (ARM, 24 bytes, Stack size 4 bytes, aduc7026driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133e0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendchar
</UL>

<P><STRONG><a name="[133dee8]"></a>_sys_exit</STRONG> (ARM, 8 bytes, Stack size 0 bytes, aduc7026driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1336ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[133d72c]"></a>main</STRONG> (ARM, 256 bytes, Stack size 8 bytes, ad5791test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = main &rArr; __2printf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[133c958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf (via Veneer)
<LI><a href="#[133d5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToAD5791ViaSPI
<LI><a href="#[133d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromAD5791ViaSPI
<LI><a href="#[133d678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791HardwareReset
<LI><a href="#[133d6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791HardwareLoad
<LI><a href="#[133d6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791HardwareClear
<LI><a href="#[133e1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026Initialization
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[133d678]"></a>AD5791HardwareReset</STRONG> (ARM, 44 bytes, Stack size 8 bytes, ad5791.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AD5791HardwareReset
</UL>
<BR>[Calls]<UL><LI><a href="#[133e140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026DelayUs
<LI><a href="#[133e2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026OutputBit
</UL>
<BR>[Called By]<UL><LI><a href="#[133cef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791Initialization
<LI><a href="#[133d72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[133d6f0]"></a>AD5791HardwareClear</STRONG> (ARM, 36 bytes, Stack size 8 bytes, ad5791.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AD5791HardwareClear
</UL>
<BR>[Calls]<UL><LI><a href="#[133e2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026OutputBit
</UL>
<BR>[Called By]<UL><LI><a href="#[133cef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791Initialization
<LI><a href="#[133d72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[133d6b4]"></a>AD5791HardwareLoad</STRONG> (ARM, 36 bytes, Stack size 8 bytes, ad5791.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AD5791HardwareLoad
</UL>
<BR>[Calls]<UL><LI><a href="#[133e2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026OutputBit
</UL>
<BR>[Called By]<UL><LI><a href="#[133d72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[133cef8]"></a>AD5791Initialization</STRONG> (ARM, 20 bytes, Stack size 8 bytes, ad5791.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133d678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791HardwareReset
<LI><a href="#[133d6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD5791HardwareClear
</UL>

<P><STRONG><a name="[133d5c4]"></a>WriteToAD5791ViaSPI</STRONG> (ARM, 128 bytes, Stack size 32 bytes, ad5791.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = WriteToAD5791ViaSPI &rArr; ADuC7026SpiOperation &rArr; ADuC7026InputBit
</UL>
<BR>[Calls]<UL><LI><a href="#[133e104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026SpiOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[133d72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[133d600]"></a>ReadFromAD5791ViaSPI</STRONG> (ARM, 212 bytes, Stack size 32 bytes, ad5791.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ReadFromAD5791ViaSPI &rArr; ADuC7026SpiOperation &rArr; ADuC7026InputBit
</UL>
<BR>[Calls]<UL><LI><a href="#[133e104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADuC7026SpiOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[133d72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[133cc64]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[133cc28]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[133c958]"></a>__2printf</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[133a324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[133d72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[133c610]"></a>_printf_pre_padding</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[133c700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[133a48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[133c5d4]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[133c700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[133a48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[133c1d8]"></a>_printf_int_hex</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[133a48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[133c160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[133acc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x (via Veneer)
</UL>

<P><STRONG><a name="[133c19c]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[133afcc]"></a>__printf</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, __printf_flags_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[133abd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent (via Veneer)
<LI><a href="#[133c700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
<LI><a href="#[133c73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[133a324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[133aaa4]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[133aa68]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[133aa2c]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[133a48c]"></a>_printf_int_common</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[133c5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[133c610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[133c700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[133c1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[133a324]"></a>_printf_char_common</STRONG> (Thumb, 38 bytes, Stack size 72 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[133afcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[133c958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1339898]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1338ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[133f70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[1339c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[1339730]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1338bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[13396b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[1339e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1338ce0]"></a>__user_libspace</STRONG> (ARM, 12 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1338ca4]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1339898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1338c68]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1336bd4]"></a>__rt_fp_status_addr</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1337174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[133c73c]"></a>__ARM_common_call_via_r1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, __printf.o(i.__ARM_common_call_via_r1))
<BR><BR>[Called By]<UL><LI><a href="#[133afcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[133c700]"></a>__ARM_common_call_via_r2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, __printf.o(i.__ARM_common_call_via_r2))
<BR><BR>[Called By]<UL><LI><a href="#[133a48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[133afcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
<LI><a href="#[133c5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[133c610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>

<P><STRONG><a name="[1337174]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1336bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1339334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[1337138]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[133a360]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[13396b8]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1339730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[133c160]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[133c1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>
<HR></body></html>
